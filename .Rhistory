gdpData <- rename(gdpData, CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
intersect(names(gdpData),names(fedData))
mergeData <- merge(gdpData, fedData, by = c("CountryCode"), all = TRUE)
mergeData <- subset(mergeData, CountryCode != "")
sortedData <- mergeData[order("CountryCode"),]
View(sortedData)
sortedData <- mergeData[order(CountryCode),]
View(mergeData)
sortedData <- sort(mergeData)
sortedData <- mergeData[, order(CountryCode)]
sortedData <- mergeData[order(CountryCode), ]
intersect(names(gdpData),names(fedData))
sortedData <- mergeData[order(CountryCode), ]
sortedData <- mergeData[order(mergeData$CountryCode), ]
sum(!is.na(unique(sortedData$rankingGDP)))
sortedData[,13]
sortedData[13]
sortedData[13,]
View(sortedData)
View(fedData)
View(sortedData)
sortedData <- mergeData[order(-mergeData$CountryCode), ]
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
setwd("C:/my_dev/R/courses/courses/03_GettingData/04_01_editingTextVariables")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
download.file(fileUrl,destfile="./data/cameras.csv")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
splitNames = strsplit(names(cameraData),"\\.")
splitNames[[5]]
splitNames[[6]]
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
mylist$letters
mylist[[1]]
splitNames[[6]][1]
firstElement <- function(x){x[1]}
sapply(splitNames,firstElement)
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,destfile="./data/reviews.csv")
download.file(fileUrl2,destfile="./data/solutions.csv")
reviews <- read.csv("./data/reviews.csv"); solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
sub("_","",names(reviews),)
testName <- "this_is_a_test"
sub("_","",testName)
gsub("_","",testName)
sub("_","",names(reviews)) #substitute
grep("Alameda",cameraData$intersection)
table(grepl("Alameda",cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
grep("Alameda",cameraData$intersection,value=TRUE)
grep("JeffStreet",cameraData$intersection)
length(grep("JeffStreet",cameraData$intersection))
library(stringr)
nchar("Jeffrey Leek")
substr("Jeffrey Leek",1,7)
paste("Jeffrey","Leek")
paste0("Jeffrey","Leek")
str_trim("Jeff      ")
setwd("C:/my_dev/R/courses/courses/03_GettingData/04_02_regularExpressions")
setwd("C:/my_dev/R/courses/courses/03_GettingData/04_03_regularExpressionsII")
test <- "sitting ats starbucks"
grep('^s(.*)s', test)
setwd("C:/my_dev/R/courses/courses/03_GettingData/04_04_workingWithDates")
d1 = date()
d1
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
format(d2,"%a %b %d")
format(d2, "%m-%d-%Y")
x = c("1jan1960", "2jan1960", "31mar1960", "30jul1960"); z = as.Date(x, "%d%b%Y")
z
z[1] - z[2]
as.numeric(z[1]-z[2])
weekdays(d2)
months(d2)
julian(d2)
library(lubridate); ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
install.packages("lubridate")
library(lubridate); ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03",tz="Pacific/Auckland")
?Sys.timezone
x = dmy(c("1jan2013", "2jan2013", "31mar2013", "30jul2013"))
wday(x[1])
wday(x[1],label=TRUE)
setwd("C:/my_dev/R/courses/courses/03_GettingData/04_05_dataResources")
setwd("C:/my_dev/R/R Programming/Cleaning Data/Week 4")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/AmericanCommunitySurvey.csv")
acsData <- read.csv("./data/AmericanCommunitySurvey.csv")
View(acsData)
?strsplilt
?strsplit
strsplit(names(acsData),"wgtp")
cat("\014")
rm(list = ls())
cat("\014")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
View(gdpData)
subgdpData <- subset(gdpData, grepl("[0-9]", gdpData$X.3))
View(subgdpData)
?apply
subgdpData$X.3 <- apply(subgdpData$X.3, 2, function(x) as.numeric(gsub(',', '', x)))
gsub(',', '', '40')
as.numeric(gsub(',', '', '40'))
as.numeric(gsub(',', '', '22,249,909'))
subgdpData$X.3 <- apply(subgdpData$X.3, 1, function(x) as.numeric(gsub(',', '', x)))
subgdpData$X.3 <- as.numeric(gsub(",", "", as.matrix(subgdpData$X.3)))
mean(subgdpData$X.3)
subgdpData <- subgdpData[which(subgdpData$X %in% c('WLD',
'LIC',
'MIC',
'LMC',
'UMC',
'LMY',
'EAP',
'ECA',
'LAC',
'MNA',
'SAS',
'SSA',
'HIC',
'EMU'
))]
subgdpData <- subgdpData[subgdpData$X %in% c('WLD',
'LIC',
'MIC',
'LMC',
'UMC',
'LMY',
'EAP',
'ECA',
'LAC',
'MNA',
'SAS',
'SSA',
'HIC',
'EMU'
)]
subgdpData <- subgdpData[!subgdpData$X %in% c('WLD',
'LIC',
'MIC',
'LMC',
'UMC',
'LMY',
'EAP',
'ECA',
'LAC',
'MNA',
'SAS',
'SSA',
'HIC',
'EMU'
),]
mean(subgdpData$X.3)
length(grep("^United", subgdpData$X.1))
length(grep("^United", subgdpData$X.2))
rm(list = ls())
cat("\014")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./data/FEDSTATS.csv")
fedData <- read.csv("./data/FEDSTATS.csv")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
names(gdpData)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./data/FEDSTATS.csv")
fedData <- read.csv("./data/FEDSTATS.csv")
names(fedData)
gdpData <- rename(gdpData, CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
intersect(names(gdpData),names(fedData))
mergeData <- merge(gdpData, fedData, by = c("CountryCode"), all = TRUE)
mergeData <- subset(mergeData, CountryCode != "")
sortedData <- mergeData[order(-mergeData$CountryCode), ]
View(sortedData)
rm(list = ls())
cat("\014")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
names(gdpData)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./data/FEDSTATS.csv")
fedData <- read.csv("./data/FEDSTATS.csv")
names(fedData)
gdpData <- rename(gdpData, CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
intersect(names(gdpData),names(fedData))
mergeData <- merge(gdpData, fedData, by = c("CountryCode"), all = TRUE)
mergeData <- subset(mergeData, CountryCode != "")
sortedData <- mergeData[order(-mergeData$CountryCode), ]
subgdpData <- subset(sortedData, grepl("[Jj]une", sortedData$Special.Notes))
rm(list = ls())
cat("\014")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
yr2012 <- subset(sampleTimes, format.Date(1, "%Y") == "2012")
class(sampleTimes)
summary(sampleTimes)
yr2012 <- sampleTimes[which(format.Date(x, "%Y") == "2012")]
yr2012 <- sampleTimes[which(format.Date(sampleTimes, "%Y") == "2012")]
mondays <- sampleTimes[which(wkday(sampleTimes) == 2)]
mondays <- sampleTimes[which(wday(sampleTimes) == 2)]
mondays <- sampleTimes[which(wday(sampleTimes) == 2 & format.Date(sampleTimes, "%Y") == "2012")]
rm(list = ls())
cat("\014")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
names(gdpData)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, destfile = "./data/FEDSTATS.csv")
fedData <- read.csv("./data/FEDSTATS.csv")
names(fedData)
gdpData <- rename(gdpData, CountryCode = X, rankingGDP = X.1, Long.Name = X.3, gdp = X.4)
intersect(names(gdpData),names(fedData))
mergeData <- merge(gdpData, fedData, by = c("CountryCode"), all = TRUE)
mergeData <- subset(mergeData, CountryCode != "")
sortedData <- mergeData[order(-mergeData$CountryCode), ]
subgdpData <- subset(sortedData, grepl("[Jj]une", sortedData$Special.Notes))
View(subgdpData)
subgdpData <- subset(sortedData, grepl("^Fiscal year end: June", sortedData$Special.Notes))
rm(list = ls())
cat("\014")
setwd("C:/my_dev/R/R Programming/Cleaning Data/Week 4/project")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "http://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/UCI%20HAR%20Dataset.zip")
unzip('./data/UCI%20HAR%20Dataset.zip')
unzip('./data/UCI%20HAR%20Dataset.zip', exdir = "./data")
training <- read.csv("./data/UCI HAR Dataset/train/X_train.txt")
testing <- read.csv("./data/UCI HAR Dataset/test/X_test.txt")
View(testing)
dataFile <- 'dataset.RData'
dataDir <- './data/UCI HAR Dataset/'
if (!file.exists(dataFile))
{
temp = read.table(paste(dataDir, "activity_label.txt"), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt"), sep = "")
attributeNames = temp$V2
training_x = read.table(paste(dataDir, "train/X_train.txt"), sep = "")
names(training_x) = attributeNames
training_y = read.table(paste(dataDir, "train/y_train.txt"), sep = "")
names(training_y) = "Activity"
training_y$Activity = as.factor(training_y$Activity)
levels(training_y$Activity) = activityLabels
training_subjects = read.table(paste(dataDir, "train/subject_train.txt"), sep = "")
names(training_subjects) = "subject"
training_subjects$subject = as.factor(training_subjects$subject)
train = cbind(training_x, training_subjects, training_y)
testing_x = read.table(paste(dataDir, "test/X_test.txt"), sep = "")
names(testing_x) = attributeNames
testing_y = read.table(paste(dataDir, "test/y_test.txt"), sep = "")
names(testing_y) = "Activity"
testing_y$Activity = as.factor(testing_y$Activity)
levels(testing_y$Activity) = activityLabels
testing_subjects = read.table(paste(dataDir, "test/subject_test.txt"), sep = "")
names(testing_subjects) = "subject"
testing_subjects$subject = as.factor(testing_subjects$subject)
test = cbind(testing_x, testing_subjects, testing_y)
save(train, test, file = dataFile)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames)
}
dataFile <- 'dataset.RData'
dataDir <- './data/UCI HAR Dataset/'
temp = read.table(paste(dataDir, "activity_label.txt"), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt"), sep = "")
attributeNames = temp$V2
paste(dataDir, "activity_label.txt")
paste(dataDir, "activity_label.txt", sep = "")
temp = read.table(paste(dataDir, "activity_label.txt", sep = ""))
temp = read.table(paste(dataDir, "activity_label.txt", sep = ""), sep = "")
setwd("C:/my_dev/R/R Programming/Cleaning Data/Week 4/project")
temp = read.table(paste(dataDir, "activity_label.txt", sep = ""), sep = "")
temp = read.table(paste(dataDir, "activity_labels.txt", sep = ""), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt", sep = ""), sep = "")
attributeNames = temp$V2
training_x = read.table(paste(dataDir, "train/X_train.txt", sep = ""), sep = "")
names(training_x) = attributeNames
training_y = read.table(paste(dataDir, "train/y_train.txt", sep = ""), sep = "")
names(training_y) = "Activity"
training_y$Activity = as.factor(training_y$Activity)
levels(training_y$Activity) = activityLabels
training_subjects = read.table(paste(dataDir, "train/subject_train.txt", sep = ""), sep = "")
names(training_subjects) = "subject"
training_subjects$subject = as.factor(training_subjects$subject)
train = cbind(training_x, training_subjects, training_y)
testing_x = read.table(paste(dataDir, "test/X_test.txt", sep = ""), sep = "")
names(testing_x) = attributeNames
testing_y = read.table(paste(dataDir, "test/y_test.txt", sep = ""), sep = "")
names(testing_y) = "Activity"
testing_y$Activity = as.factor(testing_y$Activity)
levels(testing_y$Activity) = activityLabels
testing_subjects = read.table(paste(dataDir, "test/subject_test.txt", sep = ""), sep = "")
names(testing_subjects) = "subject"
testing_subjects$subject = as.factor(testing_subjects$subject)
test = cbind(testing_x, testing_subjects, testing_y)
save(train, test, file = dataFile)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames,
dataDir, dataFile, fileUrl)
dataDir <- './data/UCI HAR Dataset/'
dataFile <- paste(dataDir, 'dataset.RData', sep = "")
dataDir <- './data/UCI HAR Dataset/'
dataFile <- './data/dataset.RData'
temp = read.table(paste(dataDir, "activity_labels.txt", sep = ""), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt", sep = ""), sep = "")
attributeNames = temp$V2
training_x = read.table(paste(dataDir, "train/X_train.txt", sep = ""), sep = "")
names(training_x) = attributeNames
training_y = read.table(paste(dataDir, "train/y_train.txt", sep = ""), sep = "")
names(training_y) = "Activity"
training_y$Activity = as.factor(training_y$Activity)
levels(training_y$Activity) = activityLabels
training_subjects = read.table(paste(dataDir, "train/subject_train.txt", sep = ""), sep = "")
names(training_subjects) = "subject"
training_subjects$subject = as.factor(training_subjects$subject)
train = cbind(training_x, training_subjects, training_y)
testing_x = read.table(paste(dataDir, "test/X_test.txt", sep = ""), sep = "")
names(testing_x) = attributeNames
testing_y = read.table(paste(dataDir, "test/y_test.txt", sep = ""), sep = "")
names(testing_y) = "Activity"
testing_y$Activity = as.factor(testing_y$Activity)
levels(testing_y$Activity) = activityLabels
testing_subjects = read.table(paste(dataDir, "test/subject_test.txt", sep = ""), sep = "")
names(testing_subjects) = "subject"
testing_subjects$subject = as.factor(testing_subjects$subject)
test = cbind(testing_x, testing_subjects, testing_y)
save(train, test, file = dataFile)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames,
dataDir, dataFile, fileUrl)
dataFile <- './data/dataset.RData'
load(dataFile)
ls()
mergeData <- merge(test,train)
mergeData <- rbind(test,train)
View(train)
View(test)
View(mergeData)
View(test)
View(train)
nrow(test)
nrow(train)
nrow(mergeData)
nrow(test) + nrow(train)
means <- colMeans(mergeData, na.rm = TRUE)
std_devs <- apply(mergeData, 2, sd)
mergeData <- sapply(mergeData, as.numeric)  ## Convert all to numeric
means <- colMeans(mergeData, na.rm = TRUE)
std_devs <- apply(mergeData, 2, sd)
names(mergeData)
colnames(mergeData)
mergeData$Activity
mergeData[Activity]
mergeData['Activity']
mergeData['Activity',]
mergeData['Activity']
mergeData[,'Activity']
levels(mergeData[,'Activity'])
mergeData %>%
group_by(Activity) %>%
summarise(no_rows = length(Activity))
sapply(mergeData[,'Activity'], function(x) length(unique(x)))
summary(mergeData)
table(mergeData[,'Activity'])
class(mergeData[,'Activity'])
table(test[,'Activity'])
table(train[,'Activity'])
colnames(mergeData)
mergeData1 <- mergeData[, !names(mergeData) %in% drops]
mergeData2 <- mergeData[, names(mergeData) %in% drops]
drops <- c("subject","Activity")
mergeData1 <- mergeData[, !names(mergeData) %in% drops]
mergeData2 <- mergeData[, names(mergeData) %in% drops]
mergeData <- rbind(test,train)
mergeData <- tapply(mergeData[,1:561], as.numeric)
dataDir <- './data/UCI HAR Dataset/'
dataFile <- './data/dataset.RData'
temp = read.table(paste(dataDir, "activity_labels.txt", sep = ""), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt", sep = ""), sep = "")
attributeNames = temp$V2
training_x = read.table(paste(dataDir, "train/X_train.txt", sep = ""), sep = "")
training_x <- sapply(training_x, as.numeric)
names(training_x) = attributeNames
training_y = read.table(paste(dataDir, "train/y_train.txt", sep = ""), sep = "")
training_y <- sapply(training_y, as.numeric)
names(training_y) = "Activity"
training_y$Activity = as.factor(training_y$Activity)
levels(training_y$Activity) = activityLabels
training_subjects = read.table(paste(dataDir, "train/subject_train.txt", sep = ""), sep = "")
names(training_subjects) = "subject"
training_subjects$subject = as.factor(training_subjects$subject)
train = cbind(training_x, training_subjects, training_y)
testing_x = read.table(paste(dataDir, "test/X_test.txt", sep = ""), sep = "")
testing_x <- sapply(testing_x, as.numeric)
names(testing_x) = attributeNames
testing_y = read.table(paste(dataDir, "test/y_test.txt", sep = ""), sep = "")
testing_y <- sapply(testing_y, as.numeric)
names(testing_y) = "Activity"
testing_y$Activity = as.factor(testing_y$Activity)
levels(testing_y$Activity) = activityLabels
testing_subjects = read.table(paste(dataDir, "test/subject_test.txt", sep = ""), sep = "")
names(testing_subjects) = "subject"
testing_subjects$subject = as.factor(testing_subjects$subject)
test = cbind(testing_x, testing_subjects, testing_y)
save(train, test, file = dataFile)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames,
dataDir, dataFile, fileUrl)
dataFile <- './data/dataset.RData'
load(dataFile)
View(test)
dataDir <- './data/UCI HAR Dataset/'
dataFile <- './data/dataset.RData'
temp = read.table(paste(dataDir, "activity_labels.txt", sep = ""), sep = "")
activityLabels = as.character(temp$V2)
temp = read.table(paste(dataDir, "features.txt", sep = ""), sep = "")
attributeNames = temp$V2
training_x = read.table(paste(dataDir, "train/X_train.txt", sep = ""), sep = "")
training_x <- sapply(training_x, as.numeric)
names(training_x) = attributeNames
training_y = read.table(paste(dataDir, "train/y_train.txt", sep = ""), sep = "")
training_y <- sapply(training_y, as.numeric)
names(training_y) = "Activity"
training_y = read.table(paste(dataDir, "train/y_train.txt", sep = ""), sep = "")
names(training_y) = "Activity"
training_y$Activity = as.factor(training_y$Activity)
levels(training_y$Activity) = activityLabels
training_subjects = read.table(paste(dataDir, "train/subject_train.txt", sep = ""), sep = "")
names(training_subjects) = "subject"
training_subjects$subject = as.factor(training_subjects$subject)
train = cbind(training_x, training_subjects, training_y)
testing_x = read.table(paste(dataDir, "test/X_test.txt", sep = ""), sep = "")
testing_x <- sapply(testing_x, as.numeric)
names(testing_x) = attributeNames
testing_y = read.table(paste(dataDir, "test/y_test.txt", sep = ""), sep = "")
names(testing_y) = "Activity"
testing_y$Activity = as.factor(testing_y$Activity)
levels(testing_y$Activity) = activityLabels
testing_subjects = read.table(paste(dataDir, "test/subject_test.txt", sep = ""), sep = "")
names(testing_subjects) = "subject"
testing_subjects$subject = as.factor(testing_subjects$subject)
test = cbind(testing_x, testing_subjects, testing_y)
save(train, test, file = dataFile)
rm(train, test, temp, training_y, testing_y, training_x, testing_x,
training_subjects, testing_subjects, activityLabels, attributeNames,
dataDir, dataFile, fileUrl)
dataFile <- './data/dataset.RData'
load(dataFile)
mergeData <- rbind(test,train)
means <- colMeans(mergeData, na.rm = TRUE)
std_devs <- apply(mergeData, 2, sd)
subMergeData <- mergeData[,-c("Activity", "subject")]
subMergeData <- mergeData[,-which(names(mergeDate) %in% c("Activity", "subject"))]
subMergeData <- mergeData[,-which(names(mergeData) %in% c("Activity", "subject"))]
means <- colMeans(subMergeData, na.rm = TRUE)
std_devs <- apply(subMergeData, 2, sd)
table(mergeData[,'Activity'])
TidyData <- mergeData[, lapply(.SD, mean), by = 'subjects, Activity']
TidyData <- aggregate(. ~ subjects, Activity, mergeData, mean)
TidyData <- aggregate(. ~ subjects+Activity, mergeData, mean)
TidyData <- aggregate(. ~ subject+Activity, mergeData, mean)
View(TidyData)
write.table(TidyData, file="./data/Tidy.txt", row.names = FALSE)
rm(dataFile, test, train, mergeData, subMergeData, means, std_devs, TidyData)
